/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) 
    {
        List<List<Integer>> ans = new ArrayList<>();
        if(root == null) return ans;
        Queue<TreeNode> que = new ArrayDeque<>();
        que.add(root);

        while(!que.isEmpty())
        {
            int s = que.size();
            List<Integer> lvl = new ArrayList<>();
            for(int i = 0 ;i < s; i++)
            {
                TreeNode node = que.peek();
                que.remove();
                if(node.left!=null) que.add(node.left);
                if(node.right!=null) que.add(node.right);
                lvl.add(node.val);
            }

            ans.add(lvl);
        }    

        return ans;
    }
}
