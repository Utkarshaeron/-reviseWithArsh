class Solution {
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) 
    {
            // code here
            int[] inde = new int[V];
            
            Stack<Integer> st = new Stack<>();
            
            for(int i = 0; i  < V; i++)
            {
                for(int it : adj.get(i))
                {
                    inde[it]++;
                }
                
                
            }
            for(int i = 0; i<V; i++)
            {
                if(inde[i]==0) st.push(i);
            }
        
            ArrayList<Integer> list = new ArrayList<>();
            while(!st.isEmpty())
            {
                int node = st.pop();
                list.add(node);
                for(int it: adj.get(node))
                {
                    inde[it]--;
                    
                    if(inde[it] == 0) st.push(it);
                }
            }
            
            return list.size() < V? true : false; 
    }
}
