class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) 
    {
        int V = numCourses;
        int[] inde = new int[V];

        ArrayList<ArrayList<Integer>> adlist = new ArrayList<>();

        for(int i = 0 ;i < V; i++)
        {
            adlist.add(new ArrayList<>());
        }    

        for(int i= 0; i < prerequisites.length;i ++)
        {
            adlist.get(prerequisites[i][1]).add(prerequisites[i][0]);
        }

        for(int i = 0 ;i < V; i++)
        {
            for(int nbr : adlist.get(i))
            {
                inde[nbr]++;
            }
        }

        Stack<Integer> st = new Stack<>();

        for(int i = 0 ;i < V; i++)
        {
            if(inde[i] == 0)
            {
                st.push(i);
            }
        }
    
        int[] ans  = new int[V];
        int i =0;
        while(!st.isEmpty())
        {
            int node = st.pop();
            ans[i++] = node;
            for(int nbr : adlist.get(node))
            {
                inde[nbr]--;

                if(inde[nbr] == 0) st.push(nbr);
            }
            
        }

        if(i == V) return ans;
        
        int[] res = {};
        return res;
    }
}
