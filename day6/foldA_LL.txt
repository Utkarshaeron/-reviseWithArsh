class Solution {
    public void reorderList(ListNode head) 
    {
        if(head == null || head.next == null) return;

        ListNode mid = middleOfLL(head);
        ListNode nH = mid.next;
        mid.next = null;
        nH = reverseLL(nH);

        ListNode c1 = head, c2 = nH,  f1 = null, f2 = null;

        while(c2!=null)
        {
            f1 = c1.next;
            f2 = c2.next;

            c1.next = c2;
            c2.next = f1;

            c1 = f1;
            c2 = f2;
        }    
    }

    public ListNode middleOfLL(ListNode node)
    {
        if(node == null || node.next == null) return node;

        ListNode s = node, f = node;

        while(f!=null && f.next!=null)
        {
            s = s.next;
            f=f.next.next;
        }

        return s;
    }

    public ListNode reverseLL(ListNode head)
    {
        if(head == null || head.next == null) return head;
        ListNode pre = null, curr = head, nxt = null;

        while(curr!=null)
        {
            nxt = curr.next;
            curr.next = pre;
            pre = curr;
            curr = nxt;
        }

        System.out.println(pre + " pre");
        return pre;
    }
}
