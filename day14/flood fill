class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int color) 
    {
        int[][]ans = image;
        int inicolor = image[sr][sc];
       

        int[] drow = { -1, 0 , + 1, 0 };
        int[] dcol = {0 ,+1, 0 , -1};

        dfs(sr, sc, inicolor , color, ans, image, drow, dcol);
        return ans;    
    }

    public void dfs(int sr , int sc,  int inicolor, int color, int[][]ans,
                    int[][]image, int[]drow, int[]dcol)
    {
        ans[sr][sc] = color;
         int n = image.length, m = image[0].length;
        for(int i = 0 ; i < 4; i++)
        {
            int nrow= sr + drow[i];
            int ncol = sc + dcol[i];
            if(nrow>=0 && nrow < n && ncol >=0 && ncol < m
            && image[nrow][ncol]== inicolor && ans[nrow][ncol]!=color)
            {
                dfs(nrow, ncol, inicolor , color, ans, image, drow, dcol);
            }
        }
    }
}
