class Solution {
    public int[][] merge(int[][] intervals) 
    {
        int n = intervals.length;

        Arrays.sort(intervals, new Comparator<int[]>() {
            public int compare(int[] a, int[] b)
            {
                return a[0] - b[0];
            }
        });

        List<List<Integer>> ans = new ArrayList<>();

        for(int i = 0 ; i < n; i++)
        {
            if(ans.size() ==0 || ans.get(ans.size()-1).get(1) < intervals[i][0])
            {
                ans.add(Arrays.asList(intervals[i][0], intervals[i][1]));
            }
            else
            {
                  ans.get(ans.size() - 1).set(1,
                  Math.max(ans.get(ans.size() - 1).get(1), intervals[i][1]));
            }
        }

       int arr[][] =  new int[ans.size()][];
           for(int i=0;i<ans.size();i++) {
           	int a[] =  new int[2];
           	for(int j=0;j<2;j++) {
           		a[j] =  ans.get(i).get(j);
           	}
           	arr[i] =  a;
           }
           
        return arr;
}
}
